# Generated by script version: 0.3 2010-10-19

# ---------- included from tlight.inc ----------
#****************************************************************************
# $Id::                                                                     $
#
# Project: SCT Application Example for LPC4300TC
#
# Description:
#   This include file is used for the SCT state machine code generator.
#----------------------------------------------------------------------------
# Software that is described herein is for illustrative purposes only
# which provides customers with programming information regarding the
# products. This software is supplied "AS IS" without any warranties.
# NXP Semiconductors assumes no responsibility or liability for the
# use of the software, conveys no license or title under any patent,
# copyright, or mask work right to the product. NXP Semiconductors
# reserves the right to make changes in the software without
# notification. NXP Semiconductors also make no representation or
# warranty that such application will be suitable for the specified
# use without further testing or modification.
#****************************************************************************

# Define the capabilities of the SCT block
STATES 32;
OUTPUTS 16;
INPUTS 8;
EVENTS 16;

# Assign input/output names to physical I/O numbers

#inputs
ASSIGN INPUT CROSS_REQUEST 5;

#outputs
ASSIGN OUTPUT GREEN_N 	2;
ASSIGN OUTPUT BLUE_N 		4;
ASSIGN OUTPUT RED_N 		3;

# used internally
ASSIGN OUTPUT REQUEST 	5;
ASSIGN OUTPUT AUTO_CROSS 	6;



# ---------- include end ----------

INPUT CROSS_REQUEST;

OUTPUT AUTO_CROSS LOW;
OUTPUT BLUE_N HIGH;
OUTPUT RED_N HIGH;
OUTPUT GREEN_N LOW;
OUTPUT REQUEST LOW;

MODE SPLIT;


MATCH_COND turn_yellow_on COMPARE L WITH {yellow_on_time};
MATCH_COND cross_timeout COMPARE H WITH {pedestrianCross_time};
MATCH_COND turn_red_off COMPARE L WITH {red_off_time};
MATCH_COND turn_yellow_off COMPARE L WITH {yellow_off_time};
MATCH_COND pedestrian_walk COMPARE L WITH {pedestrian_walk_time};
MATCH_COND turn_red_on COMPARE L WITH {red_on_time};
MATCH_COND pedestrian_stop COMPARE L WITH {pedestrian_stop_time};

DEFINE STATE LOW L_ENTRY;
DEFINE STATE HIGH H_ENTRY;
DEFINE STATE LOW YELLOW_ON_State;
DEFINE STATE LOW WALK_State;
DEFINE STATE LOW GREEN_ON_state;
DEFINE STATE LOW RED_ON_State;

RESETSTATE LOW L_ENTRY;
RESETSTATE HIGH H_ENTRY;

DEFINE EVENT HIGH trans44;
EVENT trans44 SETS (AUTO_CROSS);
EVENT trans44 MATCH cross_timeout;
EVENT trans44 H_STOP;
EVENT trans44 STATE (H_ENTRY);
EVENT trans44 JUMPS (H_ENTRY);
DEFINE EVENT LOW trans25;
EVENT trans25 MATCH turn_yellow_on;
EVENT trans25 CLEARS (RED_N);
EVENT trans25 CLEARS (GREEN_N);
EVENT trans25 L_LIMIT;
EVENT trans25 STATE (GREEN_ON_state);
EVENT trans25 JUMPS (YELLOW_ON_State);
DEFINE EVENT LOW trans45;
EVENT trans45 IRQ crossingTimeout;
EVENT trans45 MATCH OUTPUT (AUTO_CROSS) RISE;
EVENT trans45 CLEARS (GREEN_N);
EVENT trans45 SETS (REQUEST);
EVENT trans45 L_LIMIT;
EVENT trans45 STATE (L_ENTRY);
EVENT trans45 JUMPS (GREEN_ON_state);
DEFINE EVENT LOW trans26;
EVENT trans26 MATCH turn_red_on AND OUTPUT (REQUEST) HIGH;
EVENT trans26 CLEARS (RED_N);
EVENT trans26 SETS (GREEN_N);
EVENT trans26 L_LIMIT;
EVENT trans26 STATE (YELLOW_ON_State);
EVENT trans26 JUMPS (RED_ON_State);
DEFINE EVENT LOW trans43;
EVENT trans43 SETS (BLUE_N);
EVENT trans43 MATCH pedestrian_stop;
EVENT trans43 CLEARS (REQUEST);
EVENT trans43 L_LIMIT;
EVENT trans43 STATE (WALK_State);
EVENT trans43 JUMPS (RED_ON_State);
DEFINE EVENT LOW trans30;
EVENT trans30 CLEARS (AUTO_CROSS);
EVENT trans30 H_LIMIT;
EVENT trans30 MATCH turn_yellow_off AND OUTPUT (REQUEST) LOW;
EVENT trans30 H_START;
EVENT trans30 SETS (RED_N);
EVENT trans30 CLEARS (GREEN_N);
EVENT trans30 L_LIMIT;
EVENT trans30 STATE (YELLOW_ON_State);
EVENT trans30 JUMPS (L_ENTRY);
DEFINE EVENT LOW trans31;
EVENT trans31 MATCH turn_red_off AND OUTPUT (REQUEST) LOW;
EVENT trans31 CLEARS (RED_N);
EVENT trans31 CLEARS (GREEN_N);
EVENT trans31 L_LIMIT;
EVENT trans31 STATE (RED_ON_State);
EVENT trans31 JUMPS (YELLOW_ON_State);
DEFINE EVENT LOW trans24;
EVENT trans24 MATCH INPUT (CROSS_REQUEST) RISE;
EVENT trans24 CLEARS (GREEN_N);
EVENT trans24 SETS (REQUEST);
EVENT trans24 L_LIMIT;
EVENT trans24 STATE (L_ENTRY);
EVENT trans24 JUMPS (GREEN_ON_state);
DEFINE EVENT LOW trans42;
EVENT trans42 CLEARS (BLUE_N);
EVENT trans42 MATCH pedestrian_walk AND OUTPUT (REQUEST) HIGH;
EVENT trans42 CLEARS (RED_N);
EVENT trans42 L_LIMIT;
EVENT trans42 STATE (RED_ON_State);
EVENT trans42 JUMPS (WALK_State);

