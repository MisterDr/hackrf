# Generated by script version: 0.3 2010-10-19

# ---------- included from sct_simple_match.inc ----------
#****************************************************************************
# $Id::                                                                     $
#
# Project: SCT Application Example for LPC1800TC
#
# Description:
#   This include file is used for the SCT state machine code generator.
#----------------------------------------------------------------------------
# Software that is described herein is for illustrative purposes only
# which provides customers with programming information regarding the
# products. This software is supplied "AS IS" without any warranties.
# NXP Semiconductors assumes no responsibility or liability for the
# use of the software, conveys no license or title under any patent,
# copyright, or mask work right to the product. NXP Semiconductors
# reserves the right to make changes in the software without
# notification. NXP Semiconductors also make no representation or
# warranty that such application will be suitable for the specified
# use without further testing or modification.
#****************************************************************************

# Define the capabilities of the SCT block
STATES 32;
OUTPUTS 16;
INPUTS 8;
EVENTS 16;

# Assign input/output names to physical I/O numbers

# this output is used for internal purposes only
ASSIGN OUTPUT JUMP_SIGNAL	6;

ASSIGN OUTPUT CTOUT0 14;
ASSIGN OUTPUT CTOUT1 10;
ASSIGN OUTPUT CTOUT2 13;
ASSIGN OUTPUT CTOUT3 11;



# ---------- include end ----------


OUTPUT JUMP_SIGNAL LOW;
OUTPUT CTOUT3 HIGH;
OUTPUT CTOUT1 HIGH;
OUTPUT CTOUT2 HIGH;
OUTPUT CTOUT0 HIGH;

MODE SPLIT;


MATCH_COND toggleTimeout COMPARE L WITH {togglePeriodValue};
MATCH_COND jumpTimeout COMPARE H WITH {jumpPeriodValue};

DEFINE STATE LOW CTOUT2_toggle;
DEFINE STATE LOW L_ENTRY;
DEFINE STATE LOW CTOUT0_toggle;
DEFINE STATE HIGH H_ENTRY;
DEFINE STATE LOW CTOUT3_toggle;
DEFINE STATE LOW CTOUT1_toggle;

RESETSTATE LOW L_ENTRY;
RESETSTATE HIGH H_ENTRY;

DEFINE EVENT LOW event_1;
EVENT event_1 L_LIMIT;
EVENT event_1 MATCH toggleTimeout;
EVENT event_1 SETS (CTOUT3);
EVENT event_1 CLEARS (CTOUT3);
EVENT event_1 SETS (CTOUT1);
EVENT event_1 CLEARS (CTOUT1);
EVENT event_1 SETS (CTOUT2);
EVENT event_1 CLEARS (CTOUT2);
EVENT event_1 SETS (CTOUT0);
EVENT event_1 CLEARS (CTOUT0);
EVENT event_1 STATE (L_ENTRY);
EVENT event_1 JUMPS (L_ENTRY);
DEFINE EVENT LOW event_7;
EVENT event_7 L_LIMIT;
EVENT event_7 MATCH toggleTimeout;
EVENT event_7 SETS (CTOUT2);
EVENT event_7 CLEARS (CTOUT2);
EVENT event_7 STATE (CTOUT2_toggle);
EVENT event_7 JUMPS (CTOUT2_toggle);
DEFINE EVENT LOW event_10;
EVENT event_10 CLEARS (JUMP_SIGNAL);
EVENT event_10 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT event_10 SETS (CTOUT3);
EVENT event_10 STATE (CTOUT3_toggle);
EVENT event_10 JUMPS (L_ENTRY);
DEFINE EVENT LOW event_4;
EVENT event_4 CLEARS (JUMP_SIGNAL);
EVENT event_4 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT event_4 SETS (CTOUT3);
EVENT event_4 SETS (CTOUT1);
EVENT event_4 SETS (CTOUT2);
EVENT event_4 SETS (CTOUT0);
EVENT event_4 STATE (CTOUT0_toggle);
EVENT event_4 JUMPS (CTOUT1_toggle);
DEFINE EVENT LOW event_9;
EVENT event_9 L_LIMIT;
EVENT event_9 MATCH toggleTimeout;
EVENT event_9 SETS (CTOUT3);
EVENT event_9 CLEARS (CTOUT3);
EVENT event_9 STATE (CTOUT3_toggle);
EVENT event_9 JUMPS (CTOUT3_toggle);
DEFINE EVENT LOW event_2;
EVENT event_2 CLEARS (JUMP_SIGNAL);
EVENT event_2 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT event_2 SETS (CTOUT3);
EVENT event_2 SETS (CTOUT1);
EVENT event_2 SETS (CTOUT2);
EVENT event_2 SETS (CTOUT0);
EVENT event_2 STATE (L_ENTRY);
EVENT event_2 JUMPS (CTOUT0_toggle);
DEFINE EVENT LOW event_6;
EVENT event_6 CLEARS (JUMP_SIGNAL);
EVENT event_6 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT event_6 SETS (CTOUT3);
EVENT event_6 SETS (CTOUT1);
EVENT event_6 SETS (CTOUT2);
EVENT event_6 SETS (CTOUT0);
EVENT event_6 STATE (CTOUT1_toggle);
EVENT event_6 JUMPS (CTOUT2_toggle);
DEFINE EVENT LOW event_5;
EVENT event_5 L_LIMIT;
EVENT event_5 MATCH toggleTimeout;
EVENT event_5 SETS (CTOUT1);
EVENT event_5 CLEARS (CTOUT1);
EVENT event_5 STATE (CTOUT1_toggle);
EVENT event_5 JUMPS (CTOUT1_toggle);
DEFINE EVENT LOW event_8;
EVENT event_8 CLEARS (JUMP_SIGNAL);
EVENT event_8 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT event_8 SETS (CTOUT3);
EVENT event_8 SETS (CTOUT1);
EVENT event_8 SETS (CTOUT2);
EVENT event_8 SETS (CTOUT0);
EVENT event_8 STATE (CTOUT2_toggle);
EVENT event_8 JUMPS (CTOUT3_toggle);
DEFINE EVENT LOW event_3;
EVENT event_3 L_LIMIT;
EVENT event_3 MATCH toggleTimeout;
EVENT event_3 SETS (CTOUT0);
EVENT event_3 CLEARS (CTOUT0);
EVENT event_3 STATE (CTOUT0_toggle);
EVENT event_3 JUMPS (CTOUT0_toggle);
DEFINE EVENT HIGH event_0;
EVENT event_0 SETS (JUMP_SIGNAL);
EVENT event_0 L_LIMIT;
EVENT event_0 H_LIMIT;
EVENT event_0 MATCH jumpTimeout;
EVENT event_0 STATE (H_ENTRY);
EVENT event_0 JUMPS (H_ENTRY);

